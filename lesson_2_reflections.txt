What happens when you initialize a repository? Why do you need to do it?
Al iniciar un repositorio, creas un archivo oculto en la carpeta donde lo has
iniciado, llamado .git.
Lo necesitas para poder hacer commits del trabajo y de los cambios
que se crean necesarios en ese proyecto.

How is the staging area different from the working directory and the
repository? What value do you think it offers?
El directorio de trabajo es donde estarían los archivos físicos, tal
cual, mientras el repositorio es el conjunto de archivos que componen
el proyecto.
El staging area serviría para agrupar los archivos que van a sufrir
cambios en una modificación concreta, o en un momento del proyecto.
Así controlamos los archivos que van a componer el commit.

How can you use the staging area to make sure you have one commit per
logical change?
Añadiendo a staging area todos los archivos que van a sufrir cambios
en relación a un mismo problema o mejora.

What are some situations when branches would be helpful in keeping
your history organized? How would branches help?
Usar ramas es importante cuando quieres realizar cambios a un proyecto
pero no quieres que el proyecto principal se vea afectado.
Quieres hacer pruebas para una nueva funcionalidad, o hacer otra
versión del proyecto principal.

How do the diagrams help you visualize the branch structure?
De una manera visual ves los cambios que ha hecho cada persona
a cada rama del trabajo, con una línea de tiempo.

What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?
Los cambios en ambos archivos se comparar con el padre del que parten
los dos, y las cosas que hayan sido elminiadas no se suman. Pero las
que han sido añadidas por ambas personas sí acaban en el archivo final.
Al final el log es una combinación de los commits hechos en ambas
ramas, ordenados por la hora en la que fueron realizados.

What are the pros and cons of Git’s automatic merging vs. always doing
merges manually?
La ventaja es que se hace de forma automática, ahorra mucho tiempo.
Pero esto es sólo en caso de que no haya conflictos. Cuando hay conflictos
la revisión la tiene que hacer uno mismo, pero aún así también se
facilita el trabajo ya que git edita el archivo para marcarte en qué
casos hay conflictos, y qué partes pertenecen a cada commit para que
se pueda valorar qué cambios conservar.
